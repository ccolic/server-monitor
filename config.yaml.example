global:
  log_level: INFO
  log_file: server-monitor.log
  log_max_bytes: 5242880  # 5 MB
  log_backup_count: 3
  max_concurrent_checks: 10
  email_notifications:
    enabled: true
    events:
      - both
    failure_threshold: 3  # Send alert after 3 consecutive failures
    suppress_repeated: true  # Don't send repeated alerts for same failure
    smtp:
      host: smtp.example.com
      port: 587
      username: user@example.com
      password: "your-password"
      from_email: monitor@example.com
      connection_method: starttls  # Options: 'starttls', 'ssl', or 'plain'
      # Connection Method Examples:
      # For STARTTLS (common ports: 587, 25):
      #   connection_method: starttls
      #   port: 587
      #
      # For Direct SSL/TLS (common ports: 465):
      #   connection_method: ssl
      #   port: 465
      #
      # For Plain/Unsecured (not recommended):
      #   connection_method: plain
      #   port: 25
    recipients:
      - alerts@example.com
    subject_template: "Monitor Alert: {endpoint_name} - {status}"
  webhook_notifications:
    enabled: true
    events:
      - failure
    failure_threshold: 2  # Send alert after 2 consecutive failures
    suppress_repeated: true  # Don't send repeated alerts for same failure
    webhook:
      url: https://hooks.slack.com/services/your/webhook/url
      method: POST
      headers:
        Content-Type: application/json
      timeout: 30
  database:
    type: sqlite
    database: monitor.db

endpoints:
  - name: Example Website
    type: http
    interval: 60
    enabled: true
    http:
      url: https://example.com
      method: GET
      timeout: 30
      expected_status: 200
      content_match: Example Domain
      follow_redirects: true

  - name: Example API
    type: http
    interval: 30
    enabled: true
    http:
      url: https://api.example.com/health
      method: GET
      headers:
        Authorization: Bearer your-token
      timeout: 5
      expected_status: 200

  - name: Database Server
    type: tcp
    interval: 120
    enabled: true
    tcp:
      host: db.example.com
      port: 5432
      timeout: 10

  - name: HTTPS Certificate
    type: tls
    interval: 86400
    enabled: true
    tls:
      host: example.com
      port: 443
      timeout: 30
      cert_expiry_warning_days: 30

# Examples of endpoint-specific notification overrides
# These endpoints demonstrate how to override notification settings
# while inheriting global SMTP/webhook configurations

  # Critical production API - Alert immediately with custom recipients
  # - name: Critical Production API
  #   type: http
  #   interval: 30
  #   enabled: true
  #   http:
  #     url: https://api.production.com/health
  #     method: GET
  #     timeout: 10
  #     expected_status: 200
  #   email_notifications:
  #     enabled: true
  #     recipients: ["oncall@example.com", "cto@example.com"]  # Override recipients
  #     failure_threshold: 1                                   # Alert immediately
  #     subject_template: "ðŸš¨ CRITICAL: {endpoint_name} DOWN"
  #     # Inherits: global SMTP settings, events, suppress_repeated
  #   webhook_notifications:
  #     enabled: true
  #     webhook:
  #       url: https://hooks.slack.com/services/critical/alerts
  #       headers:
  #         Content-Type: application/json
  #         X-Priority: critical
  #     failure_threshold: 1                                   # Alert immediately
  #     # Inherits: global webhook method, timeout, events

  # Development service - Only failure notifications, less sensitive
  # - name: Development Service
  #   type: http
  #   interval: 120
  #   enabled: true
  #   http:
  #     url: https://dev.example.com/health
  #     method: GET
  #     timeout: 15
  #     expected_status: 200
  #   email_notifications:
  #     enabled: true
  #     events: [failure]                    # Only notify on failures
  #     failure_threshold: 5                 # Less sensitive
  #     suppress_repeated: false             # Allow repeated notifications
  #     # Inherits: global SMTP settings, recipients, subject_template
  #   webhook_notifications:
  #     enabled: false                       # Disable webhook for dev

  # Internal tool - Custom webhook only, no email
  # - name: Internal Dashboard
  #   type: http
  #   interval: 300
  #   enabled: true
  #   http:
  #     url: https://dashboard.internal.com
  #     method: GET
  #     timeout: 20
  #     expected_status: 200
  #   email_notifications:
  #     enabled: false                       # Disable email notifications
  #   webhook_notifications:
  #     enabled: true
  #     webhook:
  #       url: https://hooks.slack.com/services/team/internal
  #       headers:
  #         Content-Type: application/json
  #         X-Channel: "#internal-alerts"
  #     events: [both]                       # Both failure and recovery
  #     failure_threshold: 3
  #     # Inherits: global webhook method, timeout, suppress_repeated

  # External service - Only recovery notifications
  # - name: External Partner API
  #   type: http
  #   interval: 180
  #   enabled: true
  #   http:
  #     url: https://partner.external.com/api/status
  #     method: GET
  #     headers:
  #       Authorization: Bearer your-external-token
  #     timeout: 30
  #     expected_status: 200
  #   email_notifications:
  #     enabled: true
  #     events: [recovery]                   # Only notify when service recovers
  #     recipients: ["partners@example.com"] # Different recipients
  #     subject_template: "âœ… Partner Service Recovered: {endpoint_name}"
  #     # Inherits: global SMTP settings, failure_threshold, suppress_repeated
